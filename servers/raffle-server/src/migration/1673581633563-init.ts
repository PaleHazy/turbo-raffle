import { MigrationInterface, QueryRunner } from 'typeorm';

export class init1673581633563 implements MigrationInterface {
  name = 'init1673581633563';

  public async up(queryRunner: QueryRunner): Promise<void> {
    await queryRunner.query(
      `CREATE TABLE "category_entity" ("category_id" uuid NOT NULL DEFAULT uuid_generate_v4(), "name" character varying NOT NULL, CONSTRAINT "PK_086acbcc32058cf99d66f7414bb" PRIMARY KEY ("category_id"))`,
    );
    await queryRunner.query(
      `CREATE TABLE "item_entity" ("id" SERIAL NOT NULL, "name" character varying NOT NULL, "type" character varying NOT NULL, "rarity" character varying NOT NULL, "group" character varying NOT NULL, CONSTRAINT "PK_f8a329b22f66835df041692589d" PRIMARY KEY ("id"))`,
    );
    await queryRunner.query(
      `CREATE TABLE "user_entity" ("id" SERIAL NOT NULL, "email" character varying NOT NULL, "password" character varying NOT NULL, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "UQ_415c35b9b3b6fe45a3b065030f5" UNIQUE ("email"), CONSTRAINT "PK_b54f8ea623b17094db7667d8206" PRIMARY KEY ("id"))`,
    );
    await queryRunner.query(
      `CREATE TABLE "ticket_entity" ("id" SERIAL NOT NULL, "valueInDollars" integer NOT NULL, "isSold" boolean, "raffleId" uuid, CONSTRAINT "PK_4c23bb38e4d566808a73a5af6ec" PRIMARY KEY ("id"))`,
    );
    await queryRunner.query(
      `CREATE TABLE "raffles" ("raffle_id" uuid NOT NULL DEFAULT uuid_generate_v4(), "name" character varying NOT NULL, "description" character varying NOT NULL, CONSTRAINT "PK_8f71e996530762764b772b0a01b" PRIMARY KEY ("raffle_id"))`,
    );
    await queryRunner.query(
      `CREATE TABLE "rarity_entity" ("rarity_id" integer GENERATED BY DEFAULT AS IDENTITY NOT NULL, "name" character varying NOT NULL, CONSTRAINT "PK_e2eb3fd8b56de1f5c444a94c8b8" PRIMARY KEY ("rarity_id"))`,
    );
    await queryRunner.query(
      `CREATE TABLE "item_entity_categories_category_entity" ("itemEntityId" integer NOT NULL, "categoryEntityCategoryId" uuid NOT NULL, CONSTRAINT "PK_0584039c5d06d9b32d74500e212" PRIMARY KEY ("itemEntityId", "categoryEntityCategoryId"))`,
    );
    await queryRunner.query(`CREATE INDEX "IDX_b534d9d2f8fd5c9c7e76784477" ON "item_entity_categories_category_entity" ("itemEntityId") `);
    await queryRunner.query(
      `CREATE INDEX "IDX_3e95f8371109cb347dd37d8b20" ON "item_entity_categories_category_entity" ("categoryEntityCategoryId") `,
    );
    await queryRunner.query(
      `ALTER TABLE "ticket_entity" ADD CONSTRAINT "FK_5247b745ba2b442f46d173adad3" FOREIGN KEY ("raffleId") REFERENCES "raffles"("raffle_id") ON DELETE NO ACTION ON UPDATE NO ACTION`,
    );
    await queryRunner.query(
      `ALTER TABLE "item_entity_categories_category_entity" ADD CONSTRAINT "FK_b534d9d2f8fd5c9c7e767844777" FOREIGN KEY ("itemEntityId") REFERENCES "item_entity"("id") ON DELETE CASCADE ON UPDATE CASCADE`,
    );
    await queryRunner.query(
      `ALTER TABLE "item_entity_categories_category_entity" ADD CONSTRAINT "FK_3e95f8371109cb347dd37d8b201" FOREIGN KEY ("categoryEntityCategoryId") REFERENCES "category_entity"("category_id") ON DELETE CASCADE ON UPDATE CASCADE`,
    );
  }

  public async down(queryRunner: QueryRunner): Promise<void> {
    await queryRunner.query(`ALTER TABLE "item_entity_categories_category_entity" DROP CONSTRAINT "FK_3e95f8371109cb347dd37d8b201"`);
    await queryRunner.query(`ALTER TABLE "item_entity_categories_category_entity" DROP CONSTRAINT "FK_b534d9d2f8fd5c9c7e767844777"`);
    await queryRunner.query(`ALTER TABLE "ticket_entity" DROP CONSTRAINT "FK_5247b745ba2b442f46d173adad3"`);
    await queryRunner.query(`DROP INDEX "public"."IDX_3e95f8371109cb347dd37d8b20"`);
    await queryRunner.query(`DROP INDEX "public"."IDX_b534d9d2f8fd5c9c7e76784477"`);
    await queryRunner.query(`DROP TABLE "item_entity_categories_category_entity"`);
    await queryRunner.query(`DROP TABLE "rarity_entity"`);
    await queryRunner.query(`DROP TABLE "raffles"`);
    await queryRunner.query(`DROP TABLE "ticket_entity"`);
    await queryRunner.query(`DROP TABLE "user_entity"`);
    await queryRunner.query(`DROP TABLE "item_entity"`);
    await queryRunner.query(`DROP TABLE "category_entity"`);
  }
}
